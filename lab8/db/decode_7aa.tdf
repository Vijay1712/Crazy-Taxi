--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone IV E" LPM_DECODES=27 LPM_WIDTH=5 data eq
--VERSION_BEGIN 18.0 cbx_cycloneii 2018:04:24:18:04:18:SJ cbx_lpm_add_sub 2018:04:24:18:04:18:SJ cbx_lpm_compare 2018:04:24:18:04:18:SJ cbx_lpm_decode 2018:04:24:18:04:18:SJ cbx_mgl 2018:04:24:18:08:49:SJ cbx_nadder 2018:04:24:18:04:18:SJ cbx_stratix 2018:04:24:18:04:18:SJ cbx_stratixii 2018:04:24:18:04:18:SJ  VERSION_END


-- Copyright (C) 2018  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details.



--synthesis_resources = lut 36 
SUBDESIGN decode_7aa
( 
	data[4..0]	:	input;
	eq[26..0]	:	output;
) 
VARIABLE 
	data_wire[4..0]	: WIRE;
	eq_node[26..0]	: WIRE;
	eq_wire[31..0]	: WIRE;
	w_anode171w[2..0]	: WIRE;
	w_anode185w[3..0]	: WIRE;
	w_anode202w[3..0]	: WIRE;
	w_anode212w[3..0]	: WIRE;
	w_anode222w[3..0]	: WIRE;
	w_anode232w[3..0]	: WIRE;
	w_anode242w[3..0]	: WIRE;
	w_anode252w[3..0]	: WIRE;
	w_anode262w[3..0]	: WIRE;
	w_anode274w[2..0]	: WIRE;
	w_anode284w[3..0]	: WIRE;
	w_anode295w[3..0]	: WIRE;
	w_anode305w[3..0]	: WIRE;
	w_anode315w[3..0]	: WIRE;
	w_anode325w[3..0]	: WIRE;
	w_anode335w[3..0]	: WIRE;
	w_anode345w[3..0]	: WIRE;
	w_anode355w[3..0]	: WIRE;
	w_anode366w[2..0]	: WIRE;
	w_anode376w[3..0]	: WIRE;
	w_anode387w[3..0]	: WIRE;
	w_anode397w[3..0]	: WIRE;
	w_anode407w[3..0]	: WIRE;
	w_anode417w[3..0]	: WIRE;
	w_anode427w[3..0]	: WIRE;
	w_anode437w[3..0]	: WIRE;
	w_anode447w[3..0]	: WIRE;
	w_anode458w[2..0]	: WIRE;
	w_anode468w[3..0]	: WIRE;
	w_anode479w[3..0]	: WIRE;
	w_anode489w[3..0]	: WIRE;
	w_anode499w[3..0]	: WIRE;
	w_anode509w[3..0]	: WIRE;
	w_anode519w[3..0]	: WIRE;
	w_anode529w[3..0]	: WIRE;
	w_anode539w[3..0]	: WIRE;
	w_data169w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	eq[] = eq_node[];
	eq_node[26..0] = eq_wire[26..0];
	eq_wire[] = ( ( w_anode539w[3..3], w_anode529w[3..3], w_anode519w[3..3], w_anode509w[3..3], w_anode499w[3..3], w_anode489w[3..3], w_anode479w[3..3], w_anode468w[3..3]), ( w_anode447w[3..3], w_anode437w[3..3], w_anode427w[3..3], w_anode417w[3..3], w_anode407w[3..3], w_anode397w[3..3], w_anode387w[3..3], w_anode376w[3..3]), ( w_anode355w[3..3], w_anode345w[3..3], w_anode335w[3..3], w_anode325w[3..3], w_anode315w[3..3], w_anode305w[3..3], w_anode295w[3..3], w_anode284w[3..3]), ( w_anode262w[3..3], w_anode252w[3..3], w_anode242w[3..3], w_anode232w[3..3], w_anode222w[3..3], w_anode212w[3..3], w_anode202w[3..3], w_anode185w[3..3]));
	w_anode171w[] = ( (w_anode171w[1..1] & (! data_wire[4..4])), (w_anode171w[0..0] & (! data_wire[3..3])), B"1");
	w_anode185w[] = ( (w_anode185w[2..2] & (! w_data169w[2..2])), (w_anode185w[1..1] & (! w_data169w[1..1])), (w_anode185w[0..0] & (! w_data169w[0..0])), w_anode171w[2..2]);
	w_anode202w[] = ( (w_anode202w[2..2] & (! w_data169w[2..2])), (w_anode202w[1..1] & (! w_data169w[1..1])), (w_anode202w[0..0] & w_data169w[0..0]), w_anode171w[2..2]);
	w_anode212w[] = ( (w_anode212w[2..2] & (! w_data169w[2..2])), (w_anode212w[1..1] & w_data169w[1..1]), (w_anode212w[0..0] & (! w_data169w[0..0])), w_anode171w[2..2]);
	w_anode222w[] = ( (w_anode222w[2..2] & (! w_data169w[2..2])), (w_anode222w[1..1] & w_data169w[1..1]), (w_anode222w[0..0] & w_data169w[0..0]), w_anode171w[2..2]);
	w_anode232w[] = ( (w_anode232w[2..2] & w_data169w[2..2]), (w_anode232w[1..1] & (! w_data169w[1..1])), (w_anode232w[0..0] & (! w_data169w[0..0])), w_anode171w[2..2]);
	w_anode242w[] = ( (w_anode242w[2..2] & w_data169w[2..2]), (w_anode242w[1..1] & (! w_data169w[1..1])), (w_anode242w[0..0] & w_data169w[0..0]), w_anode171w[2..2]);
	w_anode252w[] = ( (w_anode252w[2..2] & w_data169w[2..2]), (w_anode252w[1..1] & w_data169w[1..1]), (w_anode252w[0..0] & (! w_data169w[0..0])), w_anode171w[2..2]);
	w_anode262w[] = ( (w_anode262w[2..2] & w_data169w[2..2]), (w_anode262w[1..1] & w_data169w[1..1]), (w_anode262w[0..0] & w_data169w[0..0]), w_anode171w[2..2]);
	w_anode274w[] = ( (w_anode274w[1..1] & (! data_wire[4..4])), (w_anode274w[0..0] & data_wire[3..3]), B"1");
	w_anode284w[] = ( (w_anode284w[2..2] & (! w_data169w[2..2])), (w_anode284w[1..1] & (! w_data169w[1..1])), (w_anode284w[0..0] & (! w_data169w[0..0])), w_anode274w[2..2]);
	w_anode295w[] = ( (w_anode295w[2..2] & (! w_data169w[2..2])), (w_anode295w[1..1] & (! w_data169w[1..1])), (w_anode295w[0..0] & w_data169w[0..0]), w_anode274w[2..2]);
	w_anode305w[] = ( (w_anode305w[2..2] & (! w_data169w[2..2])), (w_anode305w[1..1] & w_data169w[1..1]), (w_anode305w[0..0] & (! w_data169w[0..0])), w_anode274w[2..2]);
	w_anode315w[] = ( (w_anode315w[2..2] & (! w_data169w[2..2])), (w_anode315w[1..1] & w_data169w[1..1]), (w_anode315w[0..0] & w_data169w[0..0]), w_anode274w[2..2]);
	w_anode325w[] = ( (w_anode325w[2..2] & w_data169w[2..2]), (w_anode325w[1..1] & (! w_data169w[1..1])), (w_anode325w[0..0] & (! w_data169w[0..0])), w_anode274w[2..2]);
	w_anode335w[] = ( (w_anode335w[2..2] & w_data169w[2..2]), (w_anode335w[1..1] & (! w_data169w[1..1])), (w_anode335w[0..0] & w_data169w[0..0]), w_anode274w[2..2]);
	w_anode345w[] = ( (w_anode345w[2..2] & w_data169w[2..2]), (w_anode345w[1..1] & w_data169w[1..1]), (w_anode345w[0..0] & (! w_data169w[0..0])), w_anode274w[2..2]);
	w_anode355w[] = ( (w_anode355w[2..2] & w_data169w[2..2]), (w_anode355w[1..1] & w_data169w[1..1]), (w_anode355w[0..0] & w_data169w[0..0]), w_anode274w[2..2]);
	w_anode366w[] = ( (w_anode366w[1..1] & data_wire[4..4]), (w_anode366w[0..0] & (! data_wire[3..3])), B"1");
	w_anode376w[] = ( (w_anode376w[2..2] & (! w_data169w[2..2])), (w_anode376w[1..1] & (! w_data169w[1..1])), (w_anode376w[0..0] & (! w_data169w[0..0])), w_anode366w[2..2]);
	w_anode387w[] = ( (w_anode387w[2..2] & (! w_data169w[2..2])), (w_anode387w[1..1] & (! w_data169w[1..1])), (w_anode387w[0..0] & w_data169w[0..0]), w_anode366w[2..2]);
	w_anode397w[] = ( (w_anode397w[2..2] & (! w_data169w[2..2])), (w_anode397w[1..1] & w_data169w[1..1]), (w_anode397w[0..0] & (! w_data169w[0..0])), w_anode366w[2..2]);
	w_anode407w[] = ( (w_anode407w[2..2] & (! w_data169w[2..2])), (w_anode407w[1..1] & w_data169w[1..1]), (w_anode407w[0..0] & w_data169w[0..0]), w_anode366w[2..2]);
	w_anode417w[] = ( (w_anode417w[2..2] & w_data169w[2..2]), (w_anode417w[1..1] & (! w_data169w[1..1])), (w_anode417w[0..0] & (! w_data169w[0..0])), w_anode366w[2..2]);
	w_anode427w[] = ( (w_anode427w[2..2] & w_data169w[2..2]), (w_anode427w[1..1] & (! w_data169w[1..1])), (w_anode427w[0..0] & w_data169w[0..0]), w_anode366w[2..2]);
	w_anode437w[] = ( (w_anode437w[2..2] & w_data169w[2..2]), (w_anode437w[1..1] & w_data169w[1..1]), (w_anode437w[0..0] & (! w_data169w[0..0])), w_anode366w[2..2]);
	w_anode447w[] = ( (w_anode447w[2..2] & w_data169w[2..2]), (w_anode447w[1..1] & w_data169w[1..1]), (w_anode447w[0..0] & w_data169w[0..0]), w_anode366w[2..2]);
	w_anode458w[] = ( (w_anode458w[1..1] & data_wire[4..4]), (w_anode458w[0..0] & data_wire[3..3]), B"1");
	w_anode468w[] = ( (w_anode468w[2..2] & (! w_data169w[2..2])), (w_anode468w[1..1] & (! w_data169w[1..1])), (w_anode468w[0..0] & (! w_data169w[0..0])), w_anode458w[2..2]);
	w_anode479w[] = ( (w_anode479w[2..2] & (! w_data169w[2..2])), (w_anode479w[1..1] & (! w_data169w[1..1])), (w_anode479w[0..0] & w_data169w[0..0]), w_anode458w[2..2]);
	w_anode489w[] = ( (w_anode489w[2..2] & (! w_data169w[2..2])), (w_anode489w[1..1] & w_data169w[1..1]), (w_anode489w[0..0] & (! w_data169w[0..0])), w_anode458w[2..2]);
	w_anode499w[] = ( (w_anode499w[2..2] & (! w_data169w[2..2])), (w_anode499w[1..1] & w_data169w[1..1]), (w_anode499w[0..0] & w_data169w[0..0]), w_anode458w[2..2]);
	w_anode509w[] = ( (w_anode509w[2..2] & w_data169w[2..2]), (w_anode509w[1..1] & (! w_data169w[1..1])), (w_anode509w[0..0] & (! w_data169w[0..0])), w_anode458w[2..2]);
	w_anode519w[] = ( (w_anode519w[2..2] & w_data169w[2..2]), (w_anode519w[1..1] & (! w_data169w[1..1])), (w_anode519w[0..0] & w_data169w[0..0]), w_anode458w[2..2]);
	w_anode529w[] = ( (w_anode529w[2..2] & w_data169w[2..2]), (w_anode529w[1..1] & w_data169w[1..1]), (w_anode529w[0..0] & (! w_data169w[0..0])), w_anode458w[2..2]);
	w_anode539w[] = ( (w_anode539w[2..2] & w_data169w[2..2]), (w_anode539w[1..1] & w_data169w[1..1]), (w_anode539w[0..0] & w_data169w[0..0]), w_anode458w[2..2]);
	w_data169w[2..0] = data_wire[2..0];
END;
--VALID FILE
